{"name":"Jgalacticapi","tagline":"Java library and server to access the anonymous CDN GalacticFiles.com programmatically.","body":"![GalacticFiles Banner](https://galacticfiles.com/images/galacticfiles2.png)\r\n\r\n# jgalacticapi\r\n\r\n[Download the latest jar file](https://github.com/galacticfls/jgalacticapi/releases)\r\n\r\n[View the API javadoc](http://galacticfls.github.io/jgalacticapi/javadoc/index.html)\r\n\r\nThis software library allows people to access galacticfiles.com programmatically.  It enables the use of the following features.\r\n\r\n* [Create account](#account-creation)\r\n* [Login](#login)\r\n* [Check account](#check-account)\r\n* [File upload](#file-upload)\r\n* [List files](#list-files)\r\n* [Generate download links for any IP](#generate-link)\r\n* [Delete files](#delete-files)\r\n* [Generate payment addresses](#generate-payment-addresses)\r\n* [List payment addresses](#list-payment-addresses)\r\n* [List deposits](#list-deposits)\r\n* [Withdraw to address](#withdraw)\r\n* [List withdraws](#list-withdraws)\r\n* [Update files](#update-files)\r\n* [Grant access](#grant-access)\r\n\r\n#Account creation\r\n```java\r\nGFSession s = new GFSession();\r\ns.acceptTerms(true);  //Make sure you read galacticfiles.com/terms.html\r\ns.createUser(username, userpass);\r\nCheckData cd = s.check();\r\nif (cd.isOk() {\r\n  ..\r\n```\r\n\r\n#Login\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nCheckData cd = s.check();\r\nif (cd.isOk() {\r\n  ..\r\n```\r\n\r\n#Check account\r\nYou should always run check() after login to make sure you have successfully logged in.  You account balance is also returned.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nCheckData cd = s.check();\r\nif (cd.isOk() {\r\n  System.out.println(\"Your account balance is: \" + cd.getBalance());\r\n```\r\n\r\n#File upload\r\n```java\r\nFile f = new File(....);\r\n//Upload file f as putlic with link creation fee of 0.02BTC\r\n//This will block until the upload is complete\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nLong id = s.uploadFile(f, true, \"0.02\"); \r\n//id is the file id to use in reference to the file\r\n//or null if the upload failed.\r\n```\r\n\r\n#List files\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nList<FileInfo> fl = s.listFiles();\r\nfor (FileInfo i : fl) {\r\n  ...\r\n```\r\n\r\n#Generate link\r\nIf you are creating a download link for your own file you will only be charged the site fee based on the size of the file.  You will not be charged your own fee.  If you have insufficient funds the link will not be generated, getFee() will show how much you need in your account.  You may generate a link for any IP address in the ipv4 format (VVV.XXX.YYY.ZZZ).  If the ip is null, the link is generated for the publicly visible IP address of your connection.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\n//password is null if there is no download password\r\n//ip is the string representation of the IP that can download the file\r\n//    if ip is null the IP this connection is from is used\r\nDownloadLink dl = s.genDownloadLink(fid, password, ip);\r\nif (dl.getUrl() == null) {\r\n  //Link creation failed.\r\n  // getFee() shows how much you need in case \r\n  // you have insufficient funds\r\n  dl.getFee();\r\n}\r\nelse {\r\n  dl.getUrl(); // Url you can use to download the file\r\n```\r\n\r\n#Delete files\r\nYou may delete any file you own.  Already generated download links may work for a period of time until the file is removed from end points.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\ns.deleteFile(fileid);\r\n```\r\n\r\n#Generate payment addresses\r\nWhen you create an account a payment address is generated for you.  You may generate new ones if you like.  You must wait 5 minutess between each address.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nString addr = s.genAddress();\r\nif (addr != null) {\r\n  ...\r\n}\r\nelse {\r\n  //wait 5 minutes\r\n```\r\n\r\n#List payment addresses\r\nYou can list all of the payment addresses generated for you\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nList<AddressInfo> addresses = s.listAddresses();\r\nfor (AddressInfo : addresses) {\r\n  ...\r\n```\r\n\r\n#List deposits\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nList<DepositInfo> dpl = s.listDeposits();\r\nfor (DepositInfo di : dpl) {\r\n  //Deposits are confirmed and added to your\r\n  //balance after 6 confirmations\r\n  System.out.println(\"Amount:        \" + di.getAmount());\r\n  System.out.println(\"Confirmations: \" + di.getConfirmations());\r\n  System.out.println(\"Confirmed yet? \" + di.isAccepted());\r\n```\r\n\r\n#Withdraw\r\nYou may send bitcoin from your account to another address.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nboolean ok = s.withdraw(address, \"0.02\");\r\n```\r\n\r\n#List withdraws\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nList<WithdrawInfo> wl = s.listWithdraws();\r\nfor (WithdrawInfo wi : wl) {\r\n  ...\r\n```\r\n\r\n#Update files\r\nYou can change files accessibility to either public, private or download with password.  You can also change the fee you charge others for download links.\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nboolean ok0 = s.setPrivateFile(file0_id);\r\nboolean ok1 = s.setPublicFile(file1_id);\r\nboolean ok2 = s.setDownloadpass(file2_id, download_password);\r\nboolean ok3 = s.setFileFee(file0_id, \"0.1\");\r\n```\r\n\r\n#Grant access\r\n```java\r\nGFSession s = new GFSession();\r\ns.login(username, userpass);\r\nboolean ok = s.addFileGrant(fileid, userid);\r\n//Or remove access\r\nboolean ok1 = s.deleteFileGrant(fileid, userid1);\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}